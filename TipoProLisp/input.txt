(set fuckYou 69)
(+ fuckYou 1)
(cdr (car (cons (cons (! (= (+ 1 (* 2 3) (/ 6 3)) (* 3 3))) 21) (cons 1 2))))
(null 1)
(null (car 1))

(if (= (+ 2 2) (* 2 2))
(then (+ fuckYou 1))
(else (- fuckYou 1))
)

(if (= (+ 2 2) (* 2 2))
(then (+ fuckYou 1))
)

(if (= nil)
(then t)
)

(cons (cons 1 t) (cons 0 nil))

(defun kekFunction (a b) 
	(
		(+ a b 1)
	)
)

(kekFunction 2 3)
(kekFunction (* 2 2 2) (+ 1 1 1))
(kekFunction (kekFunction (* 2 2 2) (+ 1 1 1)) (kekFunction (* 2 2 2) (+ 1 1 1)) )

(defun recKek (a)
	(
		(if (> a 0)
			(then (* a (recKek (- a 1) ) )
			)
			(else 1
			)
		)
	)
)

(recKek 1)
(recKek 2)
(recKek 3)
(recKek 4)
(recKek 5)
(recKek 6)
(recKek 7)
(recKek 8)

(defun myFunction(a b)
	(if (= a b)
		(+ a b 2)
		(- a b 3)
	)
)